import { BOT_ENTRANCE_SCENE, BOT_INFORMATION_SCENE, BOT_REASON_SCENE, sessionConstants } from "../sceneConstants/telegraf.constants";
import { Hears, On, Scene, SceneEnter, SceneLeave } from "nestjs-telegraf";
import { MyContext } from "../interfaces/context.interface";
import { Markup, deunionize } from "telegraf";
import { MongodbService } from "src/mongodb/mongodb.service";






@Scene(BOT_INFORMATION_SCENE)
export class BotInformationScene {

    constructor(private readonly mongoService: MongodbService) { }

    @SceneEnter()
    async onSceneEnter(context: MyContext): Promise<void> {
        await context.reply("–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–µ–±–µ: —á–µ–º —Ç—ã –∑–∞–Ω–∏–º–∞–µ—à—å—Å—è / —á—Ç–æ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—à—å?");
    }

    @Hears('–ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ')
    async onHearsChangeData(context: MyContext) {
        await context.scene.enter(BOT_REASON_SCENE);
    }
    @On('text')
    async onUserMessage(context: MyContext): Promise<void> {
        
        

        const description = await deunionize(context.message).text;

        await this.mongoService.updateDescription(context.from.id, description);
        
        await context.reply('–°–ø–∞—Å–∏–±–æ!\n–ù–∞–º –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –Ω–µ–º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏, —á—Ç–æ–±—ã –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å  –∑–∞–ø—Ä–æ—Å.\n–ï—Å–ª–∏ —Ç–≤–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –Ω–∞—Å –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç, –º—ã —Å —Ç–æ–±–æ–π —Å–≤—è–∂–µ–º—Å—èü§ù');
        await context.reply('–ê –ø–æ–∫–∞ —á—Ç–æ, —Ç—ã –º–æ–∂–µ—à—å —É–∑–Ω–∞—Ç—å –æ –Ω–∞—Å –±–æ–ª—å—à–µ –Ω–∞ —Å–∞–π—Ç–µ: https://lidera.agency');
        await context.reply(`–ï—Å–ª–∏ –Ω—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ, –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ`, Markup.keyboard(['–ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ']).resize(true).oneTime());

    }

}